{
  "includeCoAuthoredBy": false,
  "enableAllProjectMcpServers": true,
  "permissions": {
    "defaultMode": "plan",
    "allow": [
      "Bash(rg:*)",
      "Bash(fd:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(eza:*)",
      "Bash(lsd:*)",
      "Bash(bat:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(git:*)",
      "Bash(cmake:*)",
      "Bash(clang++:*)",
      "Bash(brew:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(bun:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(node:*)",
      "Bash(python:*)",
      "Bash(pip:*)",
      "Bash(cargo:*)",
      "Bash(rustc:*)",
      "Bash(go:*)",
      "Bash(export:*)",
      "Bash(timeout:*)",
      "Bash(orb:*)",
      "Bash(which:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(tr:*)",
      "Bash(cut:*)",
      "Bash(test:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(jobs:*)",
      "Bash(nohup:*)",
      "Bash(sleep:*)",
      "Bash(date:*)",
      "Bash(basename:*)",
      "Bash(dirname:*)",
      "Bash(realpath:*)",
      "Bash(readlink:*)",
      "Bash(ln:*)",
      "Bash(touch:*)",
      "Bash(stat:*)",
      "Bash(file:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(type:*)",
      "Bash(command:*)",
      "Bash(xargs:*)",
      "Bash(tee:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(vim:*)",
      "Bash(nano:*)",
      "Bash(diff:*)",
      "Bash(patch:*)",
      "Bash(tree:*)",
      "Bash(watch:*)",
      "Bash(htop:*)",
      "Bash(top:*)",
      "Bash(free:*)",
      "Bash(uptime:*)",
      "Bash(uname:*)",
      "Bash(lscpu:*)",
      "Bash(lsblk:*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(ping:*)",
      "Bash(telnet:*)",
      "Bash(nc:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(lsof:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(gh:*)",
      "Bash(code:*)",
      "Bash(vim:*)",
      "Bash(nvim:*)",
      "Bash(emacs:*)",
      "Bash(subl:*)",
      "Bash(make:*)",
      "Bash(javac:*)",
      "Bash(java:*)",
      "Bash(mvn:*)",
      "Bash(gradle:*)",
      "Bash(php:*)",
      "Bash(composer:*)",
      "Bash(ruby:*)",
      "Bash(gem:*)",
      "Bash(bundle:*)",
      "Bash(rails:*)",
      "Bash(perl:*)",
      "Bash(swift:*)",
      "Bash(clang:*)",
      "Bash(gcc:*)",
      "Bash(g++:*)",
      "Bash(ld:*)",
      "Bash(objdump:*)",
      "Bash(nm:*)",
      "Bash(strip:*)",
      "Bash(gdb:*)",
      "Bash(lldb:*)",
      "Bash(valgrind:*)",
      "Bash(strace:*)",
      "Bash(ltrace:*)",
      "Bash(ldd:*)",
      "Bash(otool:*)",
      "Bash(install_name_tool:*)",
      "Bash(dsymutil:*)",
      "Bash(codesign:*)",
      "Bash(security:*)",
      "Bash(openssl:*)",
      "Bash(gpg:*)",
      "Bash(ssh-keygen:*)",
      "Bash(keytool:*)",
      "mcp__filesystem__*",
      "mcp__playwright__*",
      "mcp__puppeteer__*",
      "mcp__browser-tools__*",
      "mcp__sequential-thinking__*",
      "mcp__magic__*",
      "mcp__context7__*",
      "mcp__fetch__*"
    ],
    "deny": []
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/smart-lint.sh"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/smart-test.sh"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/update_ai_local.sh"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/smart_memory_capture.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/ntfy-notifier.sh"
          }
        ]
      }
    ]
  }
}
